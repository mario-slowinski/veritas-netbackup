#!/bin/sh

NETBACKUP=/opt/openv/volmgr/bin
INSTALLED=/tmp/drives-installed.txt
INSTALLED_OUT=/tmp/drives-installed.out
SCANNED=/tmp/drives-scanned.txt
SCANNED_OUT=/tmp/drives-scanned.out

parseInstalled () {
	gawk '$1~/^Drive$/ && $2~/^Name$/ { name=$3 }
		$1~/Path$/ { dpath=$2 }
		$1~/^Type$/ { type=$2 }
		$1~/^Status$/ { status=$2 }
		$1~/^SCSI$/ && $2~/^Protection$/ { scsi=$3 }
		$1~/^Shared$/ { shared=tolower($3) }
		$1~/^TLD/ && $2~/^Definition$/ { gsub("="," "); gsub(",","") 
				robot=substr($1, index($1, "(")+1, 1)
				drive=$4
			}
		$1~/^Serial$/ && $2~/^Number$/ { serial=$3; 
		print serial,
			"/opt/openv/volmgr/bin/tpconfig -add -drive",
			"-type", type, 
			"-scsi_protection", scsi, 
			"-shared", shared, 
			"-drstatus", status,
			"-robot", robot,
			"-robtype TLD",
			"-DRIVE", drive,
			"-asciiname", name,
			"-path"
		}
		' $1 | sort
}

parseScanned () {
	sed 's/"//g' $1 | awk '
		$1~/^Device$/ && $2~/^Name$/ { name=$4 }
		{
		if($1~"^Serial$" && $2~"^Number:$" && name!~"/dev/sg") { serial=$3;
			print serial, name
		}
	}
	' | sort
}

matchDrives () {
	if [ "$FORMAT" == "missing" ]; then
		echo "Difference between $INSTALLED_OUT and $SCANNED_OUT - drives scanned but not installed."
		join -v2 $1 $2
	elif [ "$FORMAT" == "command" ]; then
		join $1 $2 | cut -c 12-
	else
		join $1 $2 | awk 'BEGIN {OFS=";"; print "robot;drive;name;path;serial" } {print $14,$18,$20,$1}' | uniq
	fi
}

printUsage () {
cat << EOF
Usage: `basename $0` [-m|-c] [-i INSTALLED] [-s SCANNED]

-m	print missing drives listed in SCANNED but not in INSTALLED
-c	print drives in tpconfig format
INSTALLED - file with list of installed drives output of $NETBACKUP/tpconfig -dl on already configured media server, will be autogenerated if not provided.
SCANNED - file with list of scanned drives output of $NETBACKUP/scan on to configure media server, will be autogenerated if not provided.
EOF
}

while [ $# -gt 0 ]
do
	case $1 in
		"-i"|"--installed" ) shift; INSTALLED=$1;;
		"-s"|"--scanned" ) shift; SCANNED=$1;;
		"-m"|"--missing" ) FORMAT="missing";;
		"-c"|"--command" ) FORMAT="command";;
		"-h"|"--help" ) printUsage; exit 2;;
		*) echo "Unrecognized parameter.\nTry `basename $0` --help"; exit 2;;
	esac
	shift
done

if [ ! -r $INSTALLED ]; then
	echo "File $INSTALLED not found."
	echo "Generating list in $INSTALLED..."
	if [ -x $NETBACKUP/tpconfig ]; then
		$NETBACKUP/tpconfig -dl > $INSTALLED
	else
		echo "$NETBACKUP/scan is not executable.\nExitting."
		exit 1
	fi
else
	echo "Using $INSTALLED as installed drives list. Remove it to refresh."
fi
parseInstalled $INSTALLED > $INSTALLED_OUT

if [ ! -r $SCANNED ]; then
	echo "File $SCANNED not found."
	echo "Generating list in $SCANNED..."
	if [ -x $NETBACKUP/scan ]; then
		$NETBACKUP/scan > $SCANNED
	else
		echo "$NETBACKUP/scan is not executable.\nExitting."
		exit 1
	fi
else
	echo "Using $SCANNED as scanned drives list. Remove it to refresh."
fi
parseScanned $SCANNED > $SCANNED_OUT
matchDrives $INSTALLED_OUT $SCANNED_OUT
